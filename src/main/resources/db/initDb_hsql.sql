DROP TABLE IF EXISTS users CASCADE ;
DROP TABLE IF EXISTS user_roles;
DROP TABLE IF EXISTS restaurants CASCADE ;
DROP TABLE IF EXISTS restaurants_dishes;
DROP SEQUENCE IF EXISTS users_seq;
DROP SEQUENCE IF EXISTS rest_seq;

CREATE SEQUENCE USERS_SEQ START WITH 100000;
CREATE SEQUENCE REST_SEQ START WITH 100000;

CREATE TABLE users
(
  id         INTEGER GENERATED BY DEFAULT AS SEQUENCE USERS_SEQ PRIMARY KEY,
  name       VARCHAR(255) NOT NULL,
  email      VARCHAR(255) NOT NULL,
  password   VARCHAR(255) NOT NULL,
  registered TIMESTAMP DEFAULT now(),
  enabled    BOOLEAN DEFAULT TRUE
);

CREATE UNIQUE INDEX users_unique_email_idx ON users (email);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE restaurants
(
  id        INTEGER GENERATED BY DEFAULT AS SEQUENCE REST_SEQ PRIMARY KEY,
  name      VARCHAR(255) NOT NULL,
  votes     INTEGER NOT NULL
);

CREATE UNIQUE INDEX restaurants_unique_idx_id_name ON restaurants(id, name);

CREATE TABLE restaurants_dishes
(
  dish_id   INTEGER NOT NULL,
  name      VARCHAR(255) NOT NULL,
  price     INTEGER NOT NULL,
  FOREIGN KEY (dish_id) REFERENCES restaurants(id) ON DELETE CASCADE
)